{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGif.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftAppExpert.js","index.js"],"names":["AddCategory","setCategories","useState","InputValue","SetInputValue","className","onSubmit","e","preventDefault","trim","length","cat","for","type","name","id","value","onChange","target","GifGridItem","title","url","src","alt","getGisft","category","a","encodeURI","fetch","resp","json","data","gif","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GiftAppExpert","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAA0B,IAAtBC,EAAqB,EAArBA,cAG5B,EAAsCC,mBAAU,IAAhD,mBAAQC,EAAR,KAAoBC,EAApB,KAoBA,OAGY,uBAAMC,UAAU,cAAcC,SAfrB,SAACC,GAClBA,EAAEC,iBAEEL,EAAWM,OAAOC,OAAS,IAC3BT,GAAe,SAAAU,GAAG,OAAQR,GAAR,mBAAuBQ,OACzCP,EAAc,MAUV,UACI,uBAAOQ,IAAI,WAAX,iCACA,uBAAOC,KAAK,OAAOC,KAAK,WAAWC,GAAG,WAAWC,MAAQb,EAAac,SAtB5D,SAAEV,GACxBH,EAAeG,EAAEW,OAAOF,c,QCRjB,SAASG,EAAT,GAA2C,EAAnBJ,GAAoB,IAAhBK,EAAe,EAAfA,MAAOC,EAAQ,EAARA,IAI9C,OACI,yBAAShB,UAAU,OAAnB,SAEI,qBAAKA,UAAU,cAAf,SAEI,qBAAKA,UAAU,cAAf,SAEI,sBAAKA,UAAU,0CAAf,UACI,qBAAMiB,IAAMD,EAAKD,MAASA,EAAUG,IAAMH,IAC1C,4BAAKA,a,2BCZZI,EAAQ,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEdL,EAFc,iDAEiCM,UAAUF,GAF3C,+DAGDG,MAAOP,GAHN,cAGdQ,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAGFC,EAAMD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAEzB,MAAO,CACHnB,GAAImB,EAAInB,GACRK,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIC,cAAN,aAAE,EAAYC,iBAAiBf,QAZtB,kBAmBbW,GAnBa,4CAAH,sDCEZK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAE1B,ECJ4B,SAAGA,GAE3B,MAA4BvB,mBAAU,CAClC6B,KAAM,GACNO,SAAS,IAFb,mBAAQC,EAAR,KAAeC,EAAf,KAqBA,OAfAC,qBAAW,WACPjB,EAAWC,GACViB,MAAM,SAAAC,GAAI,OACPH,EACI,CACIT,KAAMY,EACNL,SAAS,SAGtB,CAAEb,IAMEc,EDnBwBK,CAAcnB,GAAnCU,EAAd,EAAQJ,KAAcO,EAAtB,EAAsBA,QAUlB,OACI,yBAASjC,UAAU,OAAnB,SACI,sBAAKA,UAAU,cAAf,UAEI,qBAAKA,UAAU,gDAAf,SACOiC,GAAW,0CAElB,qBAAKjC,UAAU,cAAf,SACI,mCAAOoB,EAAP,SAEJ,qBAAKpB,UAAU,cAAf,SAEY8B,EAAOF,KAAK,SAAAC,GAAG,OACX,mCAAK,cAACf,EAAD,eAEAe,GADCA,EAAInB,kBEkB3B8B,EA5CQ,WAKnB,MAAsC3C,mBAAU,CAAE,cAAlD,mBAAQ4C,EAAR,KAAoB7C,EAApB,KAOA,OACI,yBAASI,UAAU,OAAnB,SACI,sBAAKA,UAAU,cAAf,UAEI,sBAAKA,UAAU,cAAf,UACI,iDACA,0BAGJ,cAAC,EAAD,CAAaJ,cAAkBA,IAE/B,qBAAKI,UAAU,cAAf,SACI,6BAEQyC,EAAWb,KAAK,SAAAR,GACZ,OAAO,cAAC,EAAD,CAECA,SAAWA,GADLA,UAO9B,qBAAKpB,UAAU,sBCnC/B0C,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.09936b43.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes  from 'prop-types';\r\n\r\nexport const AddCategory = ( {  setCategories } ) => {\r\n\r\n    // Valor inicial del input\r\n    const [ InputValue, SetInputValue ] = useState( '' );\r\n\r\n    // funcion que cambia el valor del input\r\n    const handleInputChange = ( e ) => {\r\n        SetInputValue( e.target.value );\r\n    }\r\n\r\n    // funcion para prevenir el evento normal dal hacer submit del formulario\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( InputValue.trim().length > 2 ){\r\n            setCategories( cat => [   InputValue, ...cat  ] );\r\n            SetInputValue('');\r\n        }\r\n\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n\r\n\r\n                <form className=\"col-full-12\" onSubmit={ handleSubmit } >\r\n                    <label for=\"category\" >Agregar categoria  </label>\r\n                    <input type=\"text\" name=\"category\" id=\"category\" value={ InputValue } onChange={  handleInputChange } />\r\n                </form>\r\n\r\n\r\n \r\n\r\n    );\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport default function GifGridItem( { id, title, url } ) {\r\n\r\n\r\n\r\n    return (\r\n        <section className=\"fila\" >\r\n\r\n            <div className=\"contenedor1\" >\r\n\r\n                <div className=\"col-full-12\" >\r\n\r\n                    <div className=\"card  animate__animated animate__fadeIn\">\r\n                        <img  src={ url} title={  title }   alt={ title } />\r\n                        <p>{ title }</p> \r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </section  >\r\n    )\r\n}\r\n","\r\n\r\n\r\nexport     const getGisft = async(  category ) => { \r\n\r\n        const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Qmar0HBJRlLnLaX5QQMHEsae5AiucqSG`;\r\n        const resp = await fetch( url );\r\n        const { data } = await resp.json();\r\n\r\n\r\n        const gif = data.map( img => {\r\n\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n\r\n        });\r\n\r\n        \r\n        \r\n        return gif ;\r\n\r\n    }","import React from 'react'\r\nimport GifGridItem from './GifGridItem';\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\nconst { data: images, loading }  = useFetchGifs( category );\r\n\r\n\r\n\r\n/*\r\n\r\n\r\n\r\n*/\r\n\r\n    return (\r\n        <section className=\"fila\">\r\n            <div className=\"contenedor1\" >\r\n                \r\n                <div className=\"col-full-12  animate__animated animate__flash\" >\r\n                    {  loading && <p>Loading</p> }\r\n                </div>\r\n                <div className=\"col-full-12\" >\r\n                    <h2> { category } </h2>  \r\n                </div>\r\n                <div className=\"col-full-12\" >\r\n                        {\r\n                            images.map( img => \r\n                                <h3> <GifGridItem \r\n                                key={ img.id }  \r\n                                { ...img }/> \r\n                                </h3>\r\n                            )\r\n                        }\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import  { useState, useEffect } from 'react'\r\nimport { getGisft } from '../helpers/getGif';\r\n\r\nexport const useFetchGifs = (  category ) => {\r\n\r\n    const [ state, setState ] = useState( {\r\n        data: [],\r\n        loading: true\r\n    } );\r\n\r\n\r\n    useEffect( () => {\r\n        getGisft(  category )\r\n        .then( imgs => \r\n            setState(\r\n                {\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            );\r\n    }, [ category ] );\r\n\r\n\r\n\r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GiftAppExpert  = (   ) => {\r\n\r\n   // arreglo de categorias\r\n\r\n    // no se declara asi const categorias = [ 'One Punch', 'Samurai X', 'Dragon Ball' ];\r\n    const [ categories, setCategories ] = useState( [ 'One Punch'  ] ); \r\n\r\n    /* Funcion de base\r\n    const handleAdd = () => {\r\n        setCategories( cat => [ ...cat,  'Demon Slayer'] );\r\n    }\r\n*/\r\n    return (\r\n        <section className=\"fila\">  \r\n            <div className=\"contenedor1\">\r\n\r\n                <div className=\"col-full-12\">\r\n                    <h1> GiftAppExpert </h1>\r\n                    <hr></hr>\r\n                </div>\r\n\r\n                <AddCategory setCategories={   setCategories  }/>\r\n\r\n                <div className=\"col-full-12\">\r\n                    <ol>\r\n                        {\r\n                            categories.map( category => {\r\n                                return <GifGrid \r\n                                        key={ category }\r\n                                        category={ category }/>\r\n                            } )\r\n                        }\r\n                    </ol>\r\n                </div>\r\n\r\n                <div className=\"col-full-12\">\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n    );\r\n    \r\n}\r\n\r\nexport default GiftAppExpert;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GiftAppExpert from './GiftAppExpert';\n\nReactDOM.render(\n    <GiftAppExpert />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}